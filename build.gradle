buildscript {
    ext {
        springCloudVersion = "2023.0.3"
        springbootVersion = '3.3.5'
        springData = '3.4.0'
        prometheusVersion = '1.14.1'
        commonsLang3 = '3.17.0'
        commonIo = '2.17.0'
        modelMapper = '3.2.1'
        openApiSwagger = '2.1.6'
        commonValidation = '1.9.0'
    }
}

plugins {
    id 'java-library'
    id 'groovy'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.3.5' apply false
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.graalvm.buildtools.native' version '0.10.3'
    id "pl.allegro.tech.build.axion-release" version "1.18.7"
}

scmVersion {
    versionIncrementer('incrementPatch')
    ignoreUncommittedChanges.set(false)
    tag {
        versionIncrementer('incrementPatch')
        prefix.set('v.')

    }
}

group = 'm7011e.the-homeric-odyssey'
project.version = scmVersion.version + '3'

subprojects.each {
    check.dependsOn("${it.name}:check")
    publish.dependsOn("${it.name}:publish")
    assemble.dependsOn("${it.name}:assemble")
}

subprojects {
    group = rootProject.group
    project.version = rootProject.version
}

configure(
        subprojects.findAll {
            !(['common-dependencies'].contains(it.name))
        }) {

    apply plugin: 'java-library'
    apply plugin: 'groovy'
    apply plugin: 'maven-publish'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.graalvm.buildtools.native'


    project.group = rootProject.group
    project.version = rootProject.version

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }


    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-data-rest'
        implementation 'org.springframework.cloud:spring-cloud-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.session:spring-session-core'
        implementation 'org.springframework.boot:spring-boot-starter-web-services'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
        implementation 'org.apache.commons:commons-lang3:3.17.0'

        compileOnly 'org.projectlombok:lombok'
        compileOnly group: 'org.springframework.boot', name: 'spring-boot-dependencies', version: '3.3.5', ext: 'pom'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
        }
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }

    tasks.named('processAot') {
        enabled = false
    }

    tasks.register('sourceJar', org.gradle.jvm.tasks.Jar) {
        from sourceSets.main.allJava
        archiveClassifier = "sources"
    }

    publishing {
        repositories {
            maven {
                if (project.version.toString().contains('-SNAPSHOT')) {
                    url("${reposiliteUrl}/snapshots")
                } else {
                    url("${reposiliteUrl}/releases")
                }
                name "Reposilite"
                credentials(PasswordCredentials) {
                    username = reposiliteUser
                    password = reposiliteSecret
                }
                authentication {
                    basic(BasicAuthentication)
                }
            }
        }
        publications {
            maven(MavenPublication) {
                from components.java
                artifact sourceJar
            }
        }
    }
}


allprojects {
    version = rootProject.version
    group = rootProject.group

    apply plugin: 'maven-publish'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    repositories {
        mavenCentral()
        maven {
            url("${reposiliteUrl}/snapshots")
            name "Reposilite"
            credentials(PasswordCredentials) {
                username = reposiliteUser
                password = reposiliteSecret
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
        maven {
            url("${reposiliteUrl}/releases")
            name "Reposilite"
            credentials(PasswordCredentials) {
                username = reposiliteUser
                password = reposiliteSecret
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }

}

tasks.named('test') {
    useJUnitPlatform()
    jvmArgs = ["-DspringAot=false"]
}

graalvmNative {
    testSupport = false
}


